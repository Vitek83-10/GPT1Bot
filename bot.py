import os
import asyncio
import requests
from pyrogram import Client, filters

# –ß—Ç–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")
BOT_TOKEN = os.getenv("BOT_TOKEN")
TARGET_CHAT_ID = int(os.getenv("TARGET_CHAT_ID"))
AXIOM_API_KEY = os.getenv("AXIOM_API_KEY")

app = Client("gpt1bot", api_id=API_ID, api_hash=API_HASH, bot_token=BOT_TOKEN)

@app.on_message(filters.command("start"))
async def start_handler(client, message):
    await message.reply("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –≥–æ—Ç–æ–≤ –∫ –±–æ—é!")

@app.on_message(filters.command("status"))
async def status_handler(client, message):
    await message.reply("üì° –°—Ç–∞—Ç—É—Å: –±–æ—Ç –≤ –æ–Ω–ª–∞–π–Ω–µ, Axiom API –ø–æ–¥–∫–ª—é—á–µ–Ω.")

# –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å Axiom API
async def fetch_axiom_data():
    url = "https://api.axiom.xyz/v1/tokens/recent"
    headers = {
        "Authorization": f"Bearer {AXIOM_API_KEY}"
    }
    try:
        response = requests.get(url, headers=headers)
        data = response.json()
        print(data)  # –ø–æ–∫–∞ –≤—ã–≤–æ–¥–∏–º –ø—Ä–æ—Å—Ç–æ –≤ –∫–æ–Ω—Å–æ–ª—å
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Axiom:", e)

# –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞
async def background_worker():
    while True:
        await fetch_axiom_data()
        await asyncio.sleep(60)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await app.start()
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await background_worker()

if __name__ == "__main__":
    asyncio.run(main())
