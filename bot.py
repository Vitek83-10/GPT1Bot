import asyncio
from pyrogram import Client, filters
from pyrogram.enums import ParseMode
from dotenv import load_dotenv

load_dotenv()

API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")
BOT_TOKEN = os.getenv("BOT_TOKEN")
AXIOM_TOKEN = os.getenv("AXIOM_TOKEN")
TARGET_CHAT_ID = int(os.getenv("TARGET_CHAT_ID"))  # üëà –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —á–∏—Å–ª–æ–º!

app = Client(
    "viktor_bot",
    api_id=API_ID,
    api_hash=API_HASH,
    bot_token=BOT_TOKEN,
)

# ================= –ö–æ–º–∞–Ω–¥—ã =================

@app.on_message(filters.command("start"))
async def start(client, message):
    await message.reply("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")

@app.on_message(filters.command("status"))
async def status(client, message):
    await message.reply("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –≥–æ—Ç–æ–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—è–º.")

@app.on_message(filters.command("help"))
async def help_command(client, message):
    await message.reply(
        "üõ†Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/status ‚Äî –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å\n"
        "/deploy ‚Äî –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–ø–æ—Ç–æ–∫\n"
        "/stop ‚Äî –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–ø–æ—Ç–æ–∫\n"
        "/test ‚Äî –¢–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª –≤ –∫–∞–Ω–∞–ª\n"
        "/metrics ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã\n"
        "/setmetrics ‚Äî –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã\n"
        "/ping ‚Äî –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫–ª–∏–∫–∞\n"
        "/version ‚Äî –í–µ—Ä—Å–∏—è –±–æ—Ç–∞\n"
        "/help ‚Äî –ü–æ–º–æ—â—å –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
    )

@app.on_message(filters.command("test"))
async def test_signal(client, message):
    await app.send_message(
        chat_id=TARGET_CHAT_ID,
        text="üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.",
        parse_mode=ParseMode.HTML
    )

@app.on_message(filters.command("ping"))
async def ping(client, message):
    await message.reply("üèì Pong!")

@app.on_message(filters.command("version"))
async def version(client, message):
    await message.reply("üß¨ –í–µ—Ä—Å–∏—è –±–æ—Ç–∞: 1.0.0")

# =========== –§—É–Ω–∫—Ü–∏—è /id (–≤—Ä–µ–º–µ–Ω–Ω–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å ID —á–∞—Ç–∞) ===========

@app.on_message(filters.command("id"))
async def get_id(client, message):
    await message.reply(f"üÜî chat_id: `{message.chat.id}`")

# =========== –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è deploy/stop/metrics ===========

@app.on_message(filters.command("deploy"))
async def deploy(client, message):
    await message.reply("üöÄ –ê–≤—Ç–æ–ø–æ—Ç–æ–∫ –∑–∞–ø—É—â–µ–Ω (—ç–º—É–ª—è—Ü–∏—è).")

@app.on_message(filters.command("stop"))
async def stop(client, message):
    await message.reply("‚õî –ê–≤—Ç–æ–ø–æ—Ç–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

@app.on_message(filters.command("metrics"))
async def metrics(client, message):
    await message.reply("üìä –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã: GT Score ‚â• 35, Volume ‚â• $7K, Migrated ‚úÖ")

@app.on_message(filters.command("setmetrics"))
async def set_metrics(client, message):
    await message.reply("‚öôÔ∏è –ù–æ–≤—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã (—ç–º—É–ª—è—Ü–∏—è).")
